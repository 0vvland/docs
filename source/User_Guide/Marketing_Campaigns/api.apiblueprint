---
layout: page
weight: 0
title: Contacts API
seo:
  title: Contacts API
  description: The SendGrid Marketing Campaigns Contacts API
  keywords: Contacts, contacts api, marketing campaigns contacts
navigation:
  show: true
---

FORMAT: 1A

# Contacts API

{% info %}
Treat recipient IDs as opaque values. The `id` value returned by recipient endpoints should be passed exactly as returned to endpoints that require a recipient id.
{% endinfo %}

# Group Custom Fields

## Custom Fields [/contactdb/custom_fields]

### Create a Custom Field [POST]
+ Request (application/json)

    + Body

            {"name": "pet", "type": "text"}

+ Response 201

    + Body

            {"id":1,"name":"pet","type":"text"}

+ Response 400

    + Body

            Returned if request body is invalid JSON
            Returned if custom field type is invalid or not provided
            Returned if custom field name is not provided

### List All Custom Fields [GET]

+ Response 200

    + Body

            {"custom_fields":
                [
                    { "id": 1, "name": "birthday", "type": "date" },
                    { "id": 2, "name": "middle_name", "type": "text" },
                    { "id": 3, "name": "favorite_number", "type": "number" }
                ]
            }

## Custom Fields [/contactdb/custom_fields/{custom_field_id}]

+ Parameters
    + custom_field_id (required, number) ... The id of the custom field

### Retrieve a Custom Field [GET]

+ Response 200

    + Body

            {"id":1,"name":"pet","type":"text"}

+ Response 404

     + Body

            Returned if the custom field ID does not exist

### Delete a Custom Field [DELETE]

+ Response 204

+ Response 400

     + Body

            Returned if the custom field ID is not valid

+ Response 404

     + Body

            Returned if the custom field ID does not exist


# Group Reserved Fields

## Reserved Fields [/contactdb/reserved_fields]

### List fields that are reserved and can't be used for custom field names. [GET]

+ Response 200

    + Body

            {"reserved_fields":[{"name":"first_name","type":"text"},{"name":"last_name","type":"text"},{"name":"email","type":"text"},{"name":"created_at","type":"date"},{"name":"updated_at","type":"date"},{"name":"last_emailed","type":"date"},{"name":"last_clicked","type":"date"},{"name":"last_opened","type":"date"},{"name":"my_custom_field","type":"text"}]}



# Group Lists

All recipient IDs are the URL-encoded email; for example if a recipient's email is `foo@example.com`, their recipient ID is `foo@example.com`; if a recipient's email is `bar?other@example.com`, their recipient ID is `bar%3Fother@example.com`.



## Lists [/contactdb/lists]

### Create a List [POST]

+ Request (application/json)

    + Body

            {"name": "listname"}

+ Response 201

    + Body

            {"id":1,"name":"listname","recipient_count":0}

+ Response 400

    + Body

            Returned if list name is a duplicate of existing list
            Returned if the list name is not a string
            Returned if request body is invalid JSON


### List All Lists [GET]

Returns an empty list if no lists exist

+ Response 200

    + Body

            {"lists":[{"id":1,"name":"the jones","recipient_count":1}]}


### Delete Multiple lists [DELETE]

+ Request (application/json)

    + Body

            [1,2,3]

+ Response 204

    - Returned if one or more lists were deleted

    + Body

+ Response 400

     + Body

            Returned if all the list ids are not valid


## Lists [/contactdb/lists/{list_id}]

+ Parameters
    + list_id (required,number) ... The ID of the list

### Retrieve a List [GET]

+ Response 200

     + Body

            {"id":1,"name":"listname","recipient_count":0}

+ Response 400

     + Body

            Returned if the list id is not valid

+ Response 404

     + Body

            Returned if the list id does not exist

### Update a List [PATCH]

+ Request (application/json)

     + Body

            {"name":"newlistname"}

+ Response 200

        {"id":1,"name":"newlistname","recipient_count":1}

+ Response 400

        Returned if the list name is a duplicate of existing list or segment
        Returned if the list name is not provided
        Returned if the list id is not valid
        Returned if request body is invalid JSON

+ Response 404

        Returned if list id does not exist

### Delete a List [DELETE]

+ Response 204

     + Body

+ Response 400

     + Body

            Returned if the list id is not valid

+ Response 404

     + Body

            Returned if the list id does not exist



## Lists [/contactdb/lists/{list_id}/recipients?page_size=100&page=1]

+ Parameters
    + list_id (required, integer) ... The ID of your list.
    + page = `1` (optional, integer) ... page of recipients to return, must be a positive integer.
    + page_size = `100` (optional, integer) ... size of pages, must be a positive integer between 1 and 1000.

### List Recipients on a List [GET]

+ Response 200

    + Body

            {"recipients":[{"created_at":1422395108,"email":"e@example.com","first_name":"Ed","id":"YUBh","last_clicked":null,"last_emailed":null,"last_name":null,"last_opened":null,"updated_at":1422395108}]}

+ Response 400

    + Body

            Returned if list id is not a valid integer
            Returned if page_size or page are not valid integers
            Returned if page_size is less than 1 or greater than 1000
            Returned if page is less than 1

+ Response 404

    + Body

            Returned if list id does not exist

## Lists [/contactdb/lists/{list_id}/recipients/{recipient_id}]

+ Parameters
    + list_id (required, number) ... The ID of your list
    + recipient_id (required, string) ... The ID of your existing recipient

### Add a Single Recipient to a List [POST]

+ Response 201

    + Body

+ Response 404

    + Body

            Returned if the list id does not exist or is invalid
            Returned if the recipient id does not exist or is invalid

### Delete a Single Recipient from a Single List [DELETE]

+ Response 204

    + Body

+ Response 400

    + Body

            Returned if the list id is not valid
            Returned if the recipient id is not valid
            Returned if the recipient is not in the list

+ Response 404

    + Body

            Returned if the list id does not exist
            Returned if the recipient id does not exist

## Lists [/contactdb/lists/{list_id}/recipients]

+ Parameters
    + list_id (required, number) ... The ID of your list

### Add Multiple Recipients to a List [POST]

Adds existing recipients to a list, passing in the recipient IDs to add. Recipient IDs should be passed exactly as they are returned from recipient endpoints.

+ Request (application/json)

    + Body

            ["YUBh", "bWlsbGVyQG1pbGxlci50ZXN0"]

+ Response 201

+ Response 400

    + Body

            Returned if the list id is not a valid integer
            Returned if no valid recipient ids were passed
            Returned if no recipients were added
            Returned if request body is invalid JSON

+ Response 404

    + Body

            Returned if the list id does not exist

# Group Recipients
## Recipients [/contactdb/recipients]
### Add Single Recipient [POST]

+ Request (application/json)

     + Body

            [{"email": "jones@example.com", "last_name": "Jones", "pet": "Fluffy", "age": 25}]

+ Response 201

     + Body

            {"error_count":0,"error_indices":[],"new_count":1,"persisted_recipients":["am9uZXNAZXhhbXBsZS5jb20="],"updated_count":0}

+ Response 400

     + Body

            Returned if the request body is not valid json
            Returned if none of the recipient emails are not defined or valid

### Add Multiple Recipients [POST]

+ Request (application/json)

     + Body

            [
                {"email": "jones@example.com", "last_name": "Jones", "pet": "Fluffy", "age": 25},
                {"email": "miller@example.com", "last_name": "Miller", "pet": "FrouFrou", "age": 32},
                {"email": "invalid_email", "last_name": "Smith", "pet": "Spot", "age": 17}
            ]

+ Response 201

     + Body

            {"error_count":1,"error_indices":[2],"new_count":2,"persisted_recipients":["YUBh", "bWlsbGVyQG1pbGxlci50ZXN0"],"updated_count":0, "errors":[{"message":"Invalid email.", "error_indices":[2]}]}

+ Response 400

     + Body

            Returned if the request body is not valid json
            Returned if none of the recipient emails are not defined or valid

### Update Recipient [POST]

Updates one or more recipients. The body is a list of recipient objects.

+ Request (application/json)

     + Body

            [
              {"email": "jones@example.com", "last_name": "Jones"},
              {"email": "smith@example.com", "last_name": "Smith"}
            ]

+ Response 201

     + Body

            {"error_count":0,"error_indices":[],"new_count":0,"persisted_recipients":["am9uZXNAZXhhbXBsZS5jb20="],"updated_count":1}

+ Response 400

     + Body

            Returned if the request body is not valid json
            Returned if none of the recipient emails are not defined or valid

### Delete Recipient [DELETE]

Deletes one or more recipients. The body is a list of recipient ids to delete.

+ Request (application/json)

     + Body

            ["YUBh", "bWlsbGVyQG1pbGxlci50ZXN0"]

+ Response 204

    - Returned if at least one recipient was deleted

    + Body

+ Response 400

     + Body

            Returned if no recipients are deleted
            Returned if one or more of the provided emails are invalid
            Returned if the request body is not valid json


## Recipients [/contactdb/recipients?page_size=100&page=1]

+ Parameters
    + page_size = `100` (optional, integer) ... number of recipients to return at a time, must be a positive integer between 1 and 1000.
    + page = `1` (optional, integer) ... page to return, must be a positive integer

### List Recipients [GET]

+ Response 200

     + Body

            {"recipients": [{"created_at":1422313607,"email":"jones@example.com","first_name":null,"id":"YUBh","last_clicked":null,"last_emailed":null,"last_name":"Jones","last_opened":null,"updated_at":1422313790,"custom_fields":[{"id":23,"name":"pet","value":"Fluffy","type":"text"}]}]}

+ Response 400

     + Body

            Returned if page_size or page are not valid integers
            Returned if page_size is less than 1 or greater than 1000
            Returned if page is less than 1


## Recipients [/contactdb/recipients/{recipient_id}]

+ Parameters
    + recipient_id (required,number) ... The ID of the recipient

### Retrieve a Recipient [GET]

+ Response 200

     + Body

            {
                "created_at": 1422313607,
                "email": "jones@example.com",
                "first_name": null,
                "id": "YUBh",
                "last_clicked": null,
                "last_emailed": null,
                "last_name": "Jones",
                "last_opened": null,
                "updated_at": 1422313790,
                "custom_fields": [
                    {"id":23,"name":"pet","value":"Fluffy","type":"text"}
                ]
            }

+ Response 400

     + Body

            Returned if recipient id is not valid

+ Response 404

     + Body

            Returned if record for recipient id does not exist

### Delete a Recipient [DELETE]

+ Response 204

     + Body


+ Response 400

     + Body

            Returned if the recipient id is not valid

+ Response 404

     + Body

            Returned if record for recipient id does not exist

## Recipients [/contactdb/recipients/{recipient_id}/lists]

+ Parameters
    + recipient_id (required,string) ... The ID of the recipient

### Get the Lists the Recipient Is On [GET]

+ Response 200

     + Body

            {"lists":[{"id":1,"name":"listname","recipient_count":1}]}

+ Response 400

     + Body

            Returned if the recipient id is not valid

+ Response 404

     + Body

            Returned if record for the recipient id does not exist




## Recipients [/contactdb/recipients/count]

### Get a Count of Recipients [GET]

+ Response 200

     + Body

            {"recipient_count": 2}

## Recipients Search [/recipients/search/?{field_name}=bob]

+ Parameters
    + field_name (required, text) ... the name of the field you're looking for

### Get Recipients Matching Search Criteria [GET]

{% info %}
*"field_name" is a variable that is substituted for your actual custom field name from your recipient.
Text fields must be url-encoded. Date fields are searchable only by unix timestamp (e.g. 2/2/2015 becomes 1422835200)*
{% endinfo %}

+ Response 200

     + Body

            {"recipients":
                [{
                    "created_at": 1422313607,
                    "email": "jones@example.com",
                    "first_name": null,
                    "id": "YUBh",
                    "last_clicked": null,
                    "last_emailed": null,
                    "last_name": "Jones",
                    "last_opened": null,
                    "updated_at": 1422313790,
                    "custom_fields": [
                        { "id": 23, "name": "pet", "value": "Fluffy", "type": "text"}
                    ]
                }]
            }

+ Response 400

     + Body

            Returned if no search params are specified
            {"errors":[{"message": "no search params"}]}




# Group Segments

#### Valid operators for create and update depend on the type of the field you are segmenting.

<ul>
  <li>Dates: "eq", "ne", "lt" (before), "gt" (after)</li>
  <li>Text: "contains", "eq" (is), "ne" (is not)</li>
  <li>Numbers: "eq", "lt", "gt"</li>
  <li>Opens and Clicks: "eq" (opened), "ne" (not opened)</li>
</ul>

## Segments [/contactdb/segments]

### Create a Segment [POST]

+ Request (application/json)

    + Body

            {
              "name": "Last Name Miller",
              "conditions": [{ "field": "last_name", "value": "Miller", "operator": "eq", "and_or": null}]
            }

+ Response 201

    + Body

            {
              "id": 1,
              "name": "Last Name Miller",
              "list_id": null,
              "conditions": [{
                                "field":"last_name",
                                "value":"Miller",
                                "operator":"eq",
                                "and_or":null
                              }],
              "recipient_count": 1
            }

### List All Segments [GET]

+ Response 200

     + Body

            {
              "segments": [
                            {
                            "id":1,
                            "name": "Last Name Miller",
                            "list_id": null,
                            "conditions": [
                                          {
                                          "field": "last_name",
                                          "value": "Miller",
                                          "operator": "eq",
                                          "and_or": null
                                          }, { "field": "something"}
                                        ],
                            "recipient_count":1
                            }
                          ]
            }


## Segments [/contactdb/segments/{segment_id}]

+ Parameters
    + segment_id (required,number) ... The ID of the segment

### Retrieve a Segment [GET]

+ Response 200

     + Body

            {"id":1,"name":"Last Name Miller","list_id":null,"conditions":[{"field":"last_name","value":"Miller","operator":"eq","and_or":""}],"recipient_count":1}

+ Response 404

     + Body

            Returned if segment id is not valid
            Returned if segment id does not exist

### Update a Segment [PATCH]

+ Request (application/json)

     + Body

            {"name":"The Millers","conditions":[{"field":"last_name", "value":"Miller", "operator":"eq", "and_or":""}]}

+ Response 200

     + Body

            {"id":5,"name":"The Millers","list_id":null,"conditions":[{"field":"last_name","value":"Miller","operator":"eq","and_or":""}],"recipient_count":1}

+ Response 400

     + Body

            Returned if request body is not valid json
            Returned if invalid value is passed into one of the request body parameters
            Returned if the segment id is not valid
            Returned if "and_or" and set value is not passed into the request body
            Returned if "and_or" is set on the only condition passed
            Returned if "and_or" is set on all conditions
            Returned if "and_or" is not set on more than one condition when passing multiple conditions
            Returned if "op" and set value is not passed into the request body
            Returned if "value" and set value is not passed into the request body
            Returned if "field" and set value is not passed into the request body

+ Response 404

     + Body

            Returned if the segment id does not exist

### Delete a Segment [DELETE]

+ Response 204

     + Body

+ Response 400

     + Body

            Returned if the segment id is not valid

+ Response 404

     + Body

            Returned if the segment id does not exist

## Segments [/contactdb/segments/{segment_id}/recipients]

+ Parameters
    + segment_id (required,number) ... The ID of the segment

### List Recipients On a Segment [GET]

+ Response 200

    + Body

            {"recipients":[{"created_at":1423160740,"email":"miller@example.com","first_name":null,"id":"bWlsbGVyQG1pbGxlci50ZXN0","last_clicked":null,"last_emailed":null,"last_name":"Miller","last_opened":null,"updated_at":1423160740}]}

+ Response 404

    + Body

            Returned if the segment id is not valid
            Returned if the segment id does not exist (TODO: Currently returning a 500)


## Segments [/contactdb/segments/{segment_id}/recipients?limit=50&offset=0]

+ Parameters
    + segment_id (required, integer) ... The ID of your segment
    + limit = `100` (optional, integer) ... number of recipients to return at a time, must be a positive integer from 1 to 1000.
    + offset = `0` (optional, integer) ... number of recipients to offset by, must be a positive integer.

### List Recipients On a Segment According to Limit and Offset [GET]

+ Response 200

    + Body

            {"recipients":[{"created_at":1423160740,"email":"bWlsbGVyQG1pbGxlci50ZXN0","first_name":null,"id":"miller@example.com","last_clicked":null,"last_emailed":null,"last_name":"Miller","last_opened":null,"updated_at":1423160740}]}

+ Response 400

    + Body

            Returned if limit is not a valid integer
            Returned if offset is not a valid integer

+ Response 404

    + Body

            Returned if the segment id is not valid or does not exist.
