---
layout: page
title: Contacts API
weight: 0
navigation:
  show: true
breadcrumbs: true
---

FORMAT: 1A

# Contacts

{% info %}
__NOTE: All recipient IDs are the URL-encoded email;
for example if a recipient's email is `foo@example.com`, their recipient ID is `foo@example.com`;
if a recipient's email is `bar?other@example.com`, their recipient ID is `bar%3Fother@example.com`.__
{% endinfo %}

# Group Custom Fields

## Custom Fields [/contactdb/custom_fields]

### Add a Single Custom Field [POST]

+ Request (application/json)

    + Body

            {"name": "pet", "type": "text"}

+ Response 201

    + Body

            {"id":1,"name":"pet","type":"text"}

+ Response 400

    + Body

            Returned if request body is invalid JSON
            Returned if custom field type is invalid or not provided
            Returned if custom field name is not provided

### List Custom Fields [GET]

+ Response 200

    + Body

            {"custom_fields":
                [
                    { "id": 1, "name": "birthday", "type": "date" },
                    { "id": 2, "name": "middle_name", "type": "text" },
                    { "id": 3, "name": "favorite_number", "type": "number" }
                ]
            }

## Custom Fields [/contactdb/custom_fields/{custom_field_id}]

+ Parameters
    + custom_field_id (required, number) ... The id of the custom field

### List a Single Custom Field [GET]

+ Response 200

    + Body

            {"id":1,"name":"pet","type":"text"}

+ Response 404

     + Body

            Returned if the custom field ID does not exist

### Delete a Custom Field [DELETE]

+ Response 204

+ Response 400

     + Body

            Returned if the custom field ID is not valid

+ Response 404

     + Body

            Returned if the custom field ID does not exist

# Group Lists

{% info %}
__NOTE: All recipient IDs are the URL-encoded email;
for example if a recipient's email is `foo@example.com`, their recipient ID is `foo@example.com`;
if a recipient's email is `bar?other@example.com`, their recipient ID is `bar%3Fother@example.com`.__
{% endinfo %}

## Lists [/contactdb/lists]

### Add a Single List [POST]

+ Request (application/json)

    + Body

            {"name": "listname"}

+ Response 201

    + Body

            {"id":1,"name":"listname","recipient_count":0}

+ Response 400

    + Body

            Returned if list name is a duplicate of existing list
            Returned if the list name is not a string
            Returned if request body is invalid JSON


### Read all Lists [GET]

+ Response 200

    + Body

            {"lists":[{"id":1,"name":"the jones","recipient_count":1}]}

## Lists: [/contactdb/lists/{list_id}]

+ Parameters
    + list_id (required,number) ... The ID of the list

### Get a Single List [GET]

+ Response 200

     + Body

            {"id":1,"name":"listname","recipient_count":0}

+ Response 400

     + Body

            Returned if the list id is not valid

+ Response 404

     + Body

            Returned if the list id does not exist

### Update a Single List [PATCH]

+ Request (application/json)

     + Body

            {"name":"newlistname"}

+ Response 200

        {"id":1,"name":"newlistname","recipient_count":1}

+ Response 400

        Returned if the list name is a duplicate of existing list or segment
        Returned if the list name is not provided
        Returned if the list id is not valid
        Returned if request body is invalid JSON

+ Response 404

        Returned if list id does not exist

### Delete a Single List [DELETE]

+ Response 204

     + Body

+ Response 400

     + Body

            Returned if the list id is not valid

+ Response 404

     + Body

            Returned if the list id does not exist

## Lists [/contactdb/lists/{list_id}/recipients_batch]

+ Parameters
    + list_id (required, number) ... The ID of your list

### Add Multiple Recipients to a Single List [POST]

+ Request (application/json)

    + Body

            ["jones@example.com", "miller@example.com"]

+ Response 201

+ Response 400

    + Body

            Returned if the list id is not a valid integer
            Returned if no valid recipient ids were passed
            Returned if no recipients were added
            Returned if request body is invalid JSON

+ Response 404

    + Body

            Returned if the list id does not exist


## Lists [/contactdb/lists/{list_id}/recipients?limit=100&offset=0]

+ Parameters
    + list_id (required, integer) ... The ID of your list
    + limit = `100` (optional, integer) ... number of recipients to return at a time (default: 100)
    + offset = `0` (optional, integer) ... index of first recipient to return (default: 0)

### List Recipients from a Single List [GET]

+ Response 200

    + Body

            {"recipients":[{"created_at":1422395108,"email":"e@example.com","first_name":"Ed","id":"e@example.com","last_clicked":null,"last_emailed":null,"last_name":null,"last_opened":null,"updated_at":1422395108}]}

+ Response 400

    + Body

            Returned if list id is not a valid integer
            Returned if the parameters are invalid

+ Response 404

    + Body

            Returned if list id does not exist

## Lists [/contactdb/lists/{list_id}/recipients/{recipient_id}]

+ Parameters
    + list_id (required, number) ... The ID of your list
    + recipient_id (required, string) ... The ID of your recipient

### Add a Single Recipient to a List [POST]

+ Response 201

    + Body

+ Response 404

    + Body

            Returned if the list id does not exist or is invalid
            Returned if the recipient id does not exist or is invalid

### Delete a Single Recipient from a Single List [DELETE]

+ Response 204

    + Body

+ Response 400

    + Body

            Returned if the list id is not valid
            Returned if the recipient id is not valid
            Returned if the recipient is not in the list

+ Response 404

    + Body

            Returned if the list id does not exist
            Returned if the recipient id does not exist

## Lists [/contactdb/lists_batch]

### Delete Multiple lists [DELETE]

+ Request (application/json)

    + Body
            [1,2,"3"]

+ Response 204

     + Body

+ Response 400

     + Body

            Returned if all the list ids are not valid



# Group Recipients

## Recipients [/contactdb/recipients]

### Add a Single Recipient [POST]

+ Request (application/json)

     + Body

            {"email": "jones@example.com", "last_name": "Jones", "pet": "Fluffy"}

+ Response 201

    + Body

            {
                "created_at": 1424838734,
                "custom_fields": [
                    {"id":2,"name":"middle_name","type":"text","value":null},
                    {"id":3,"name":"favorite_number","type":"number","value":null},
                    {"id":4,"name":"birthday","type":"date","value":null},
                    {"id”:5,”name":"pet","type":"text","value":"Fluffy"}
                ],
                "email":"jones@example.com",
                "first_name":null,
                "id":"jones@example.com",
                "last_clicked":null,
                "last_emailed":null,
                "last_name":null,
                "last_opened":null,
                "updated_at":1424838734
            }

+ Response 400

     + Body

            Returned if email parameter is empty or not valid
            Returned if recipient limit has been reached
            Returned if the request body is not valid json
                {"errors":[{"message": "request body is invalid"}]}

### Delete Multiple Recipients [DELETE]

+ Request (application/json)

     + Body

            ["jones@example.com", "miller@example.com"]

+ Response 204

     + Body

+ Response 400

     + Body

            Returned if no recipients are deleted
            Returned if one or more of the provided emails are invalid
            Returned if the request body is not valid json

## Recipients [/contactdb/recipients?limit=100&offset=0]

+ Parameters
    + limit = `100` (optional, integer) ... number of recipients to return at a time.
    + offset = `0` (optional, integer) ... index of first recipient to return.

### List Recipients [GET]

+ Response 200

     + Body

            {"created_at":1422313607,"email":"jones@example.com","first_name":null,"id":"jones@example.com","last_clicked":null,"last_emailed":null,"last_name":"Jones","last_opened":null,"updated_at":1422313790,"custom_fields":[{"id":23,"name":"pet","value":"Fluffy","type":"text"}]}

+ Response 400

     + Body

            Returned if limit or offset are not valid integers
            Returned if limit is less than 1
            Returned if offset is less than 0

## Recipients [/contactdb/recipients/batch]

### Get Multiple Recipients [GET]

+ Request (application/json)

     + Body

            ["jones@example.com","miller@example.com"]

+ Response 200

     + Body

            {
              "recipients": [
                {"created_at":1422313607,"email":"jones@example.com","first_name":null,"id":"jones@example.com","last_clicked":null,"last_emailed":null,"last_name":"Jones","last_opened":null,"updated_at":1422313790,"custom_fields":[{"id":23,"name":"pet","value":"Fluffy","type":"text"}]},
                {"created_at":1422313607,"email":"miller@example.com","first_name":null,"id":"miller@example.com","last_clicked":null,"last_emailed":null,"last_name":"Miller","last_opened":null,"updated_at":1422313790,"custom_fields":[{"id":23,"name":"pet","value":"FrouFrou","type":"text"}]}
              ]
            }

+ Response 400

    + Body

            Returned if the request body is not valid json
            {"errors":[{"message": "no valid record ids provided"}]}
            Returned if none of the recipient ids are valid

## Recipients [/contactdb/recipients/count]

### Read a count of recipients [GET]

+ Response 200

     + Body

            {"recipient_count": 2}

## Recipients Search [/contactdb/recipients/search/?{field_name}=bob]

{% info %}
Note: *"field_name" is a variable that is substituted for your actual custom field name from your recipient*
{% endinfo %}

+ Parameters
    + field_name (required, text) ... the name of the field you're looking for

### Read recipients matching search criteria [GET]

+ Response 200

     + Body

            {"recipients":
                [{
                    "created_at": 1422313607,
                    "email": "jones@example.com",
                    "first_name": null,
                    "id": "jones@example.com",
                    "last_clicked": null,
                    "last_emailed": null,
                    "last_name": "Jones",
                    "last_opened": null,
                    "updated_at": 1422313790,
                    "custom_fields": [
                        { "id": 23, "name": "pet", "value": "Fluffy", "type": "text"}
                    ]
                }]
            }

+ Response 400

     + Body

            Returned if no search params are specified
            {"errors":[{"message": "no search params"}]}

## Recipients [/contactdb/recipients/{recipient_id}]

+ Parameters
    + recipient_id (required,number) ... The ID of the recipient

### List a Single Recipient [GET]

+ Response 200

     + Body

            {
                "created_at": 1422313607,
                "email": "jones@example.com",
                "first_name": null,
                "id": "jones@example.com",
                "last_clicked": null,
                "last_emailed": null,
                "last_name": "Jones",
                "last_opened": null,
                "updated_at": 1422313790,
                "custom_fields": [
                    {"id":23,"name":"pet","value":"Fluffy","type":"text"}
                ]
            }

+ Response 400

     + Body

            Returned if recipient id is not valid

+ Response 404

     + Body

            Returned if record for recipient id does not exist

### Delete a Recipient [DELETE]

+ Response 204

     + Body


+ Response 400

     + Body

            Returned if the recipient id is not valid

+ Response 404

     + Body

            Returned if record for recipient id does not exist

## Recipients [/contactdb/recipients/{recipient_id}/lists]

+ Parameters
    + recipient_id (required, number) ... The ID of the recipient

### List the recipient lists to which the recipient belongs [GET]

+ Response 200

     + Body

            {"lists":[{"id":1,"name":"listname","recipient_count":1}]}

+ Response 400

     + Body

            Returned if the recipient id is not valid

+ Response 404

     + Body

            Returned if record for the recipient id does not exist

## Recipients [/contactdb/recipients_batch]

### Add Multiple Recipients [POST]

+ Request (application/json)

     + Body

            [
                {"email": "jones@example.com", "last_name": "Jones", "pet": "Fluffy"},
                {"email": "miller@example.com", "last_name": "Miller", "pet": "FrouFrou"}
            ]

+ Response 201

     + Body

            {"error_count":0,"error_indices":[],"new_count":2,"persisted_recipients":["jones@example.com", "miller@example.com"],"updated_count":0}

+ Response 400

     + Body

            Returned if the request body is not valid json
            {"errors":[{"message": "request body is invalid"}]}

            Returned if none of the recipient emails are not defined or valid
            {"errors":[{"message": "No recipients persisted, possibly due to invalid parameters"}]}

# Group Reserved Fields

## Reserved Fields [/contactdb/reserved_fields]

### List fields that are reserved and can't be used for custom field names. [GET]

+ Response 200

    + Body

            {"reserved_fields":[{"name":"first_name","type":"text"},{"name":"last_name","type":"text"},{"name":"email","type":"text"},{"name":"created_at","type":"date"},{"name":"updated_at","type":"date"},{"name":"last_emailed","type":"date"},{"name":"last_clicked","type":"date"},{"name":"last_opened","type":"date"},{"name":"my_custom_field","type":"text"}]}

# Group Segments

#### Valid operators for create and update depend on the type of the field you are segmenting.

<ul>
 <li>Dates: "eq", "ne", "lt" (before), "gt" (after)</li>
 <li>Text: "contains", "eq" (is), "ne" (is not)</li>
 <li>Numbers: "eq", "lt", "gt"</li>
 <li>Opens and Clicks: "eq" (opened), "ne" (not opened)</li>
</ul>

## Segments [/contactdb/segments]

### List all segments [GET]

+ Response 200

     + Body

            {"segments":[{"id":1,"name":"Last Name Miller","list_id":null,"conditions":[{"field":"last_name","value":"Miller","operator":"eq","and_or":""}],"recipient_count":1}]}

### Create a segment [POST]

+ Request

    + Body

            {"name":"Last Name Miller","conditions":[{"field":"last_name", "value":"Miller", "operator":"eq", "and_or":""}]}

+ Response 201

    + Body

            {"id":1,"name":"Last Name Miller","list_id":null,"conditions":[{"field":"last_name","value":"Miller","operator":"eq","and_or":""}],"recipient_count":1}

## Segments [/contactdb/segments/{segment_id}]

+ Parameters
    + segment_id (required,number) ... The ID of the segment

### List a single segment [GET]

+ Response 200

     + Body

            {"id":1,"name":"Last Name Miller","list_id":null,"conditions":[{"field":"last_name","value":"Miller","operator":"eq","and_or":""}],"recipient_count":1}

+ Response 404

     + Body

            Returned if segment id is not valid
            Returned if segment id does not exist

### Update a single segment [PUT]

+ Request (application/json)

     + Body

            {"name":"The Millers","conditions":[{"field":"last_name", "value":"Miller", "operator":"eq", "and_or":""}]}

+ Response 200

     + Body

            {"id":5,"name":"The Millers","list_id":null,"conditions":[{"field":"last_name","value":"Miller","operator":"eq","and_or":""}],"recipient_count":1}

+ Response 400

     + Body

            Returned if request body is not valid json
            Returned if invalid value is passed into one of the request body parameters
            Returned if the segment id is not valid
            Returned if "and_or" and set value is not passed into the request body
            Returned if "and_or" is set on the only condition passed
            Returned if "and_or" is set on all conditions
            Returned if "and_or" is not set on more than one condition when passing multiple conditions
            Returned if "op" and set value is not passed into the request body
            Returned if "value" and set value is not passed into the request body
            Returned if "field" and set value is not passed into the request body

+ Response 404

     + Body

            Returned if the segment id does not exist

### Delete a Single Segment [DELETE]

+ Response 204

     + Body

+ Response 400

     + Body

            Returned if the segment id is not valid

+ Response 404

     + Body

            Returned if the segment id does not exist

## Segments [/contactdb/segments/{segment_id}/recipients]

+ Parameters
    + segment_id (required,number) ... The ID of the segment

### List the Recipients from a Single Segment [GET]

+ Response 200

    + Body

            {"recipients":[{"created_at":1423160740,"email":"miller@example.com","first_name":null,"id":"miller@example.com","last_clicked":null,"last_emailed":null,"last_name":"Miller","last_opened":null,"updated_at":1423160740}]}

+ Response 404

    + Body

            Returned if the segment id is not valid
            Returned if the segment id does not exist (TODO: Currently returning a 500)


## Segments [/contactdb/segments/{segment_id}/recipients?limit=50&offset=0]

+ Parameters
    + segment_id (required, integer) ... The ID of your segment
    + limit = `100` (optional, integer) ... number of recipients to return at a time
    + offset = `0` (optional, integer) ... number of recipients to offset by

### List recipients from a single segment according to limit and offset [GET]

+ Response 200

    + Body

            {"recipients":[{"created_at":1423160740,"email":"miller@example.com","first_name":null,"id":"miller@example.com","last_clicked":null,"last_emailed":null,"last_name":"Miller","last_opened":null,"updated_at":1423160740}]}

+ Response 400

    + Body

            Returned if limit is not a valid integer
            Returned if offset is not a valid integer

+ Response 404

    + Body

            Returned if the segment id is not valid or does not exist.
